<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!--  beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean -->
	
	<!-- Configure to plugin JSON as request and response in method handler -->
	<!-- beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean -->
	
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>	
	
	
	<context:component-scan base-package="classpath:com.getcake.geo" />
	
    <context:annotation-config/>
	
    <beans:bean id="geoService" class="com.getcake.geo.service.GeoService" >
	</beans:bean>	
	
    <beans:bean id="geoController" class="com.getcake.geo.controller.GeoController" >
      <beans:property name="geoService" ref="geoService"/>
	</beans:bean>	
	
    <!-- beans:bean id="msSqlDao" class="com.getcake.geo.dao.MsSqlDao" >
      <beans:property name="dataSource" ref="msSqlDataSource"/>
      <beans:property name="sqlGetLocationId" 
		value="select top 1 location_id from  ipv6_city  where :ipv6 &lt;= ipv6_end and :ipv6  &gt;= ipv6_start order by ipv6_end"/>
      <beans:property name="sqlGetLocationInfo" 
		value="select * from cities t  (nolock) where removed = 0 order by location_id"/>
    </beans:bean -->
	
    <beans:bean id="hashCacheDao" class="com.getcake.geo.dao.HashCacheDao" >
      <beans:property name="dataSourceType" value="msSql"/>
      <beans:property name="dataSource" ref="sqlDataSource"/>
      <beans:property name="sqlGetIpLookup" 
		value="select top 1 location_id locationId from  ipv6_city  where :ipv6 &lt;= ipv6_end and :ipv6  &gt;= ipv6_start order by ipv6_end"/>
      <beans:property name="sqlGetLocationInfo" 
		value="select location_id locationId, country, region, city, latitude, longitude, metro_code metroCode from cities (nolock) where removed = 0 order by locationId"/>
      <beans:property name="sqlGetIspInfo" 
		value="select isp_id ispId, provider_name providerName from isps (nolock) where removed = 0 order by ispId"/>
    </beans:bean>
	
	<!--  "org.springframework.jndi.JndiObjectFactoryBean" CA1-DEV-PRD-DB1 -->
	<beans:bean id="sqlDataSource" class="net.sourceforge.jtds.jdbcx.JtdsDataSource" >
    	<beans:property name="user" value="language_text"/>
    	<beans:property name="password" value="language_text"/>
    	<beans:property name="serverName" value="us1-rds-sql-001.cb6hlnirjjxn.us-east-1.rds.amazonaws.com"/>
    	<beans:property name="portNumber" value="1433"/>
    	<beans:property name="databaseName" value="dataimports"/>
    	<beans:property name="instance" value=""/>
	</beans:bean>
	
	<!--  beans:bean id="txManager" 
	      class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
      <beans:property ref="inMemSqlDataSource" name="dataSource"/>
	</beans:bean -->

</beans:beans>
